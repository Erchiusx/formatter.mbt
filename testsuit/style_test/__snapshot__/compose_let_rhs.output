// generated file, do not edit!
fn collapsible_apply() -> Unit {
  let a = f(arg1, arg2)
  let Pattern_______________________________________________________ = 
    f(arg1, arg2, arg3)
  let Pattern_______________________________________________________ = f(
    arg1_____________________,
    arg2_____________________,
    arg3_____________________,
  )
  let Pattern_______________________________________________________ = 
    f_______________________________(
      arg1_____________________,
      arg2_____________________,
      arg3_____________________,
    )
  
}

fn collapsible_array() -> Unit {
  let Pattern = [arg1, arg2]
  let Pattern_______________________________________________________ = [
    arg1,
    arg2,
    arg3,
  ]
  let Pattern_______________________________________________________ = [
    arg1_____________________,
    arg2_____________________,
    arg3_____________________,
  ]
  
}

fn collapsible_record() -> Unit {
  let Pattern = { field1, field2 }
  let Pattern_______________________________________________________ = {
    arg1,
    arg2,
    arg3,
  }
  let Pattern_______________________________________________________ = {
    arg1_____________________,
    arg2_____________________,
    arg3_____________________,
  }
  
}

fn collapsible_constraint() -> Unit {
  let Pattern = (expr : Anno)
  let Pattern_______________________________________________________ = (
    expr________
    : Anno________
  )
  let Pattern_______________________________________________________ = (
    expr_______________________________________________
    : Anno_________________________________________
  )
  
}

fn collapsible_if() -> Unit {
  let Pattern = if a { b } else { c }
  let Pattern__________________________________________________________ = 
    if a { b } else { c }
  let Pattern___________________________________________________ = if a {
    b________________________________
  } else {
    c_____________________________
  }
  let Pattern___________________________________________________ = 
    if a_______________________________ {
      b__________________________
    } else {
      c________________________
    }
  
}

fn collapsible_dot_apply() -> Unit {
  let a = self.method(arg1, arg2)
  let Pattern_______________________________________________________ = 
    self.method(arg1, arg2, arg3)
  let Pattern_________________________ = self
    .method(
      arg1_____________________,
      arg2_____________________,
      arg3_____________________,
    )
  let Pattern_______________________________________________________ = {
    [
      arg1_________________________,
      arg2__________________________,
      arg3____________________,
    ]
    .method(
        arg1_____________________,
        arg2_____________________,
        arg3_____________________,
      )
  }
  
}

