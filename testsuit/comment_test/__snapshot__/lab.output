fn f() -> Unit {
  [[]] //11
  //12
  h //13
}

fn g() -> Unit {
  
}

==========================================================
// generated file, do not edit!
[
  {
    kind: //10,
    loc: -3:9-3:13,
    surround: (COMMA (-3:7-3:8), RBRACKET (-4:3-4:4)),
  },
  {
    kind: //11,
    loc: -4:5-4:9,
    surround: (
      RBRACKET (-4:3-4:4),
      COMMENT({content: "//12", kind: Ownline(leading_blank_line=false, trailing_blank_line=false), consumed_by_docstring: false}) (-5:3-5:7)
    ),
  },
  {
    kind: //12,
    loc: -5:3-5:7,
    surround: (RBRACKET (-4:3-4:4), LIDENT("h") (-6:3-6:4)),
  },
  {
    kind: //13,
    loc: -6:4-6:8,
    surround: (LIDENT("h") (-6:3-6:4), RBRACE (-7:1-7:2)),
  },
  {kind: BLANK, loc: -7:2-8:2, surround: (RBRACE (-7:1-7:2), FN (-9:1-9:3))},
  {
    kind: BLANK,
    loc: -9:18-11:2,
    surround: (RBRACE (-9:17-9:18), EOF (-12:1-12:1)),
  }
]

{
  -3:7-3:8: [
    {
      kind: //10,
      loc: -3:9-3:13,
      surround: (COMMA (-3:7-3:8), RBRACKET (-4:3-4:4)),
    }
  ],
  -1:1-7:2: [
    {kind: BLANK, loc: -7:2-8:2, surround: (RBRACE (-7:1-7:2), FN (-9:1-9:3))}
  ],
  -2:3-4:4: [
    {
      kind: //11,
      loc: -4:5-4:9,
      surround: (
        RBRACKET (-4:3-4:4),
        COMMENT({content: "//12", kind: Ownline(leading_blank_line=false, trailing_blank_line=false), consumed_by_docstring: false}) (-5:3-5:7)
      ),
    }
  ],
  -2:3-6:4: [
    {
      kind: //13,
      loc: -6:4-6:8,
      surround: (LIDENT("h") (-6:3-6:4), RBRACE (-7:1-7:2)),
    }
  ],
  -6:3-6:4: [
    {
      kind: //12,
      loc: -5:3-5:7,
      surround: (RBRACKET (-4:3-4:4), LIDENT("h") (-6:3-6:4)),
    }
  ]
}

{
  -3:5-3:7: {
    "lbracket": Token(Some(-3:5-3:6)),
    "comma": TokenArray([]),
    "rbracket": Token(Some(-3:6-3:7))
  },
  -2:3-4:4: {
    "lbracket": Token(Some(-2:3-2:4)),
    "comma": TokenArray([Some(-3:7-3:8)]),
    "rbracket": Token(Some(-4:3-4:4))
  },
  -1:1-7:2: {
    "async": Token(None),
    "fn": Token(Some(-1:1-1:3)),
    "lbracket": Token(None),
    "commas0": TokenArray([]),
    "type_var_binders": TableArray([]),
    "rbracket": Token(None),
    "lparen": Token(Some(-1:5-1:6)),
    "parameters": TableArray([]),
    "commas1": TokenArray([]),
    "rparen": Token(Some(-1:6-1:7)),
    "thin_arrow": Token(Some(-1:8-1:10)),
    "raise_or_noraise": Token(None),
    "question": Token(None),
    "lbrace": Token(Some(-1:16-1:17)),
    "rbrace": Token(Some(-7:1-7:2))
  },
  -9:1-9:18: {
    "async": Token(None),
    "fn": Token(Some(-9:1-9:3)),
    "lbracket": Token(None),
    "commas0": TokenArray([]),
    "type_var_binders": TableArray([]),
    "rbracket": Token(None),
    "lparen": Token(Some(-9:5-9:6)),
    "parameters": TableArray([]),
    "commas1": TokenArray([]),
    "rparen": Token(Some(-9:6-9:7)),
    "thin_arrow": Token(Some(-9:8-9:10)),
    "raise_or_noraise": Token(None),
    "question": Token(None),
    "lbrace": Token(Some(-9:16-9:17)),
    "rbrace": Token(Some(-9:17-9:18))
  }
}

{
  -3:5-3:7: {
    "lbracket": Token(Some(-3:5-3:6)),
    "comma": TokenArray([]),
    "rbracket": Token(Some(-3:6-3:7))
  },
  -2:3-4:4: {
    "lbracket": Token(Some(-2:3-2:4)),
    "comma": TokenArray([Some(-3:7-3:8)]),
    "rbracket": Token(Some(-4:3-4:4))
  },
  -1:1-7:2: {
    "async": Token(None),
    "fn": Token(Some(-1:1-1:3)),
    "lbracket": Token(None),
    "commas0": TokenArray([]),
    "type_var_binders": TableArray([]),
    "rbracket": Token(None),
    "lparen": Token(Some(-1:5-1:6)),
    "parameters": TableArray([]),
    "commas1": TokenArray([]),
    "rparen": Token(Some(-1:6-1:7)),
    "thin_arrow": Token(Some(-1:8-1:10)),
    "raise_or_noraise": Token(None),
    "question": Token(None),
    "lbrace": Token(Some(-1:16-1:17)),
    "rbrace": Token(Some(-7:1-7:2))
  },
  -9:1-9:18: {
    "async": Token(None),
    "fn": Token(Some(-9:1-9:3)),
    "lbracket": Token(None),
    "commas0": TokenArray([]),
    "type_var_binders": TableArray([]),
    "rbracket": Token(None),
    "lparen": Token(Some(-9:5-9:6)),
    "parameters": TableArray([]),
    "commas1": TokenArray([]),
    "rparen": Token(Some(-9:6-9:7)),
    "thin_arrow": Token(Some(-9:8-9:10)),
    "raise_or_noraise": Token(None),
    "question": Token(None),
    "lbrace": Token(Some(-9:16-9:17)),
    "rbrace": Token(Some(-9:17-9:18))
  }
}
